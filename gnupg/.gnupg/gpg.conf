# Display long key IDs
keyid-format 0xlong

# List all keys (or the specified ones) along with their fingerprints
with-fingerprint

# Display the calculated validity of user IDs during key listings
list-options show-uid-validity
verify-options show-uid-validity

# Use the GnuPG Agent for passphrase handling
# use-agent

# Set the character encoding to UTF-8 (for internationalization support)
charset utf-8

# Fixed list mode (ensure consistent output in key listings)
fixed-list-mode

# Default keyserver for key searches and retrievals
keyserver hkps://keys.openpgp.org   # Consider using a more modern, secure keyserver
# Alternate keyservers for redundancy
# keyserver pgp.mit.edu
# keyserver hkp://pool.sks-keyservers.net

# Include revoked keys when searching for keys
keyserver-options include-revoked

# Specify default key for signing and encryption
# default-key 0x<your-key-id-here>

# Trust the keys based on user ID validity during key signing
# You can enable key validity checks to ensure the keys are valid before signing them
# cert-digest-algo SHA512   # Use a stronger algorithm for key signing
# require-valid-uid         # Only trust keys with valid UIDs

# Expiry settings for automatically expiring keys after a specified time
# Set a reasonable default for key expiry (you can adjust the time as needed)
# default-key "0x<your-key-id>"   # Make sure you define a default key
# default-recipient "0x<your-key-id>"  # Set a default recipient for encryptions

# For enhanced security, disable comments in public keys
no-comments

# Automatic key expiration for added security
# You can also add expiration checks to further enhance security
# key-expiration-time 365   # Set an expiry time for keys (in days)

# Ensuring integrity during key retrievals (optional, adds security)
# A secure connection for retrieving keys
# keyserver-options http-proxy=proxy.example.com
